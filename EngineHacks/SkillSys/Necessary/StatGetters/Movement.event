#ifndef MODULAR_GETTER_MOVEMENT_EVENT
#define MODULAR_GETTER_MOVEMENT_EVENT

#include "_Common.event"
ALIGN 4
pMovModifiers: // Movement
	POIN prAddUnitBaseMov prAddUnitMovBonus (prGetItemMovBonus-1) prItemPassiveMov prRallyMov prSkillCelerity prSkillPoise prNullifyIfGuardAI prArmorMarchCheck 
	#ifdef ACCESSORIES_AND_FORGING
		// This doesn't work out of the box and I cba to debug it 
		// So accessories cannot grant movement bonuses 
		//POIN prAddAccessoryMovement
	#endif 
	#ifdef STAIRS_ASM
	POIN StairsMoveDebuff-1
	#endif
	POIN prNullifyIfFreeze
	#ifdef DEBUFFS_MIN_ZERO
	POIN prMinZero
	#endif
WORD 0

prAddUnitBaseMov: // byte 0x12 in ROM class data is base class movement
	rAdd(rForWordAt(UNIT_ROMCLASS, rSByteAt(0x12))) 

prAddUnitMovBonus:
	rAdd(rSByteAt(UNIT_MOV_BONUS))

prSkillCelerity:
	rIfUnitHasSkill(CelerityID)
		rAddConst(2)
		
prSkillPoise:
	rIfUnitHasSkill(PoiseID)
		rAddConst(1)

prNullifyIfGuardAI:
	//rIfUnitHasNotAllegience(UA_BLUE) // I want to always null movement if ai4 = 0x20 
	
		rIfUnitHasGuardAI
			rConstant(0)

prNullifyIfFreeze:
	rIfUnitHasStatus(0x9)
		rConstant(0)

prRallyMov:
	#include "_asm/RallyMov.lyn.event"
	POIN GetDebuffs|1

ALIGN 4
prAddEquipMov:
	rAdd(rForUnitEquipped(rCallExternal(prGetItemMovBonus)))
	#include "_asm/GetItemMovBonus.lyn.event"

ALIGN 4
prItemPassiveMov:
	rPassiveStatBoosts(STAT_MOV)

	#ifdef ACCESSORIES_AND_FORGING
ALIGN 4
prAddAccessoryMovement:
	rAdd(rForUnitEquippedAccessory(rCallExternal(prGetItemMovBonus)))
	#endif 	

#endif // MODULAR_GETTER_MOVEMENT_EVENT
